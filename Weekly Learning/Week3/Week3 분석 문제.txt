- 입문 주차와 비교해서 입력 받는 방식의 차이와 공통점을 비교해보세요.

공통점 :  공통점이라고 하면 Input Action을 설정해줬다는 것과, Player Input 컴포넌트를 사용한다는 것

차이점 :  입문 주차에는 InputAction을 만들 때 Add Control Scheme부터 만들어서 마우스, 키보드 입력을 받도록 한다.
	또한 Action Type을 별로 신경쓰지 않고 간단한 버튼 형식으로만 만들었었다.
	그리고 Player Input 컴포넌트에서 Behavior를 send message를 사용했다.
	send message를 사용했기 때문에  Action 이름 앞에 On 이 붙은 메서드를 만들어 지정한 키를 누르면 메서드가 실행되도록 했다.

	숙련 주차에서는 Action Type을 변경하여 mouse의 delta값이나 value의 vector2값으로 상하좌우 값을 받도록 했고
	Player Input 컴포넌트에서 Behavior를 Invoke Unity Events를 사용하여 각 Action에 button 이벤트를 할당하듯이 메서드를 지정해줄 수 있도록 한다


- `CharacterManager`와 `Player`의 역할에 대해 고민해보세요.

`CharacterManager`는 Player를 관리해주는 클래스다. Player에게 무슨 일이 일어났을 때, 여러가지 필드 값들을 관리해주는 클래스,
생성부터 선택, 삭제 등등 캐릭터의 데이터를 관리해준다. 또한 다른 오브젝트와의 접근이나 연동을 제어할 수 있다.

'Player'는 플레이어가 가지는 값들, 필드 값이나 다른 상태를 나타내는 클래스 등 어떤 행동이 아닌 무엇인가를 나타내는 수치만을 가지고 있는것
예를 들면 능력치(hp, stamina, mp, 공격력 등)나 그 능력치가 담긴 상태창 같은것들을 포함한다. 


- 핵심 로직을 분석해보세요 (`Move`, `CameraLook`, `IsGrounded`)


- `Move`와 `CameraLook` 함수를 각각 `FixedUpdate`, `LateUpdate`에서 호출하는 이유에 대해 생각해보세요.